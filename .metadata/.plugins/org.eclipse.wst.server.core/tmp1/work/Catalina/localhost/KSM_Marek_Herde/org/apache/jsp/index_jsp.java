/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.77
 * Generated at: 2017-05-25 12:43:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import de.unikassel.ir.webapp.SearchEngine;
import java.util.List;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("<title>Moogle</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\t<center>\n");
      out.write("\t\t<h1>Moogle</h1>\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\t<form>\n");
      out.write("\t\t\t<input type=\"text\" name=\"searchfield\"> <input type=\"submit\"\n");
      out.write("\t\t\t\tname=\"search\" /> <br> <br> <select name=\"operator\">\n");
      out.write("\t\t\t\t<option>RANK</option>\n");
      out.write("\t\t\t\t<option>OR</option>\n");
      out.write("\t\t\t\t<option>AND</option>\n");
      out.write("\t\t\t</select>\n");
      out.write("\t\t</form>\n");
      out.write("\n");
      out.write("\t\t");

			String search = request.getParameter("search");

			if (search != null) {

				/* getting content from the search field */
				String searchterm = request.getParameter("searchfield");

				/* determining the used boolean operator */
				String operator = request.getParameter("operator");

				/* printing some information */
				out.println("Moogle found the following documents w.r.t. your query:");
				out.println("<br/><br/>");

				/* creation of new search engine to search for documents */
				SearchEngine searcher = new SearchEngine();

				/* stores the corresponding documents */
				List<String> result = null;

				/* checking which booleanOperator is used */
				if (operator.equals("OR")) {
					/* OR operator */
					result = searcher.testQuery(searchterm, false);
				} else if (operator.equals("AND")) {
					/* AND operator */
					result = searcher.testQuery(searchterm, true);
				} else {
					/* RANKED operator */
					result = searcher.testRankedQuery(searchterm);
				}

				/* printing all documents */
				for (String s : result) {
					out.println(s);
					out.println("<br/><br/>");
				}
			}
		
      out.write("\n");
      out.write("\t</center>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
