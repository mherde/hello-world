package de.unikassel.ir.vsr;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.URL;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

import org.jsoup.Jsoup;

public class HTMLDocument extends DocumentImpl {

	private HashSet<String> stopwords = new HashSet<String>();

	private URL url;

	public HTMLDocument(URL url) {
		this.url = url;
		try {
			Scanner sc = new Scanner(new File("resources/englishST.txt"), "UTF-8");
			stopwords.add(sc.next());
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

	@Override
	public void read(InputStream input) throws IOException {

		/* represents the current position of scanned words */
		int currentPosition = 1;

		/* reader to read document */
		BufferedReader in = new BufferedReader(new InputStreamReader(input));

		/* stores all lines of the document */
		String document = "";

		/* stores currentLine */
		String currentLine;

		/* reading all lines of document */
		while ((currentLine = in.readLine()) != null) {

			/* adding line as array of terms */
			document += currentLine.trim();
		}

		org.jsoup.nodes.Document doc = Jsoup.parse(document);
		doc.setBaseUri(this.url.toString());

		System.out.println(doc);

		Stemmer stemmer = new Stemmer();
		/* initialization of the map */
		this.termsIndex = new HashMap<>();

		for (String term : doc.text().split("\\s+")) {
			stemmer.add(term.toLowerCase().toCharArray(), term.length());
			stemmer.stem();
			String token = stemmer.toString();
			if (!this.stopwords.contains(token)) {
				ArrayList<Integer> positionsOfToken = this.termsIndex.getOrDefault(token, new ArrayList<Integer>());
				positionsOfToken.add(currentPosition);
				this.termsIndex.put(token, positionsOfToken);
				this.size++;
			}
		}

	}

	public Set<URL> getExtractedLinks() {

		return null;
	}

}
