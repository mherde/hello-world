package de.unikassel.ir.vsr;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.net.URL;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

import org.jsoup.Jsoup;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

public class HTMLDocument extends DocumentImpl {

	private HashSet<String> stopwords = new HashSet<String>();

	private URL url;

	public HTMLDocument(URL url) {
		this.url = url;
		try {
			Scanner sc = new Scanner(new File("resources/englishST.txt"), "UTF-8");
			while (sc.hasNext()) {
				stopwords.add(sc.next());
			}
			sc.close();
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

	@Override
	public void read(InputStream input) throws IOException {

		/* represents the current position of scanned words */
		int currentPosition = 1;

		org.jsoup.nodes.Document doc = Jsoup.parse(input, "UTF-8", this.url.toString());
		doc.setBaseUri(this.url.toString());
		
		Element link = doc.select("a");
		String relHref = link.get(0).attr("href"); // == "/"
		String absHref = link.attr("abs:href"); // "http://jsoup.org/"
		
		System.out.println(relHref);
		System.out.println(absHref);

		Stemmer stemmer = new Stemmer();
		/* initialization of the map */
		this.termsIndex = new HashMap<>();

//		for (String term : doc.text().split("\\s+")) {
//			stemmer.add(term.toLowerCase().toCharArray(), term.length());
//			stemmer.stem();
//			String token = stemmer.toString();
//			if (!this.stopwords.contains(token)) {
//				ArrayList<Integer> positionsOfToken = this.termsIndex.getOrDefault(token, new ArrayList<Integer>());
//				positionsOfToken.add(currentPosition);
//				this.termsIndex.put(token, positionsOfToken);
//				this.size++;
//			}
//		}

	}

	public Set<URL> getExtractedLinks() {

		return null;
	}

}
